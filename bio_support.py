#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Aug 07, 2020 02:55:09 PM IST  platform: Windows NT

import sys
import psycopg2
from psycopg2 import sql
from tkinter import messagebox

con = psycopg2.connect(database ="payment", user = "postgres", password = "root", host = "127.0.0.1", port = "5432" )
cur = con.cursor()

Name = None

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def edit(p1):
    global Name
    Name = w.name_2.get()
    Name = Name.lower()
    cur.execute("SELECT * FROM biodata WHERE name = %s",[Name])
    rows = cur.fetchall()
    for row in rows:
        w.name.delete(0,100)
        w.role.delete(0,100)
        w.acc_no.delete(0,100)
        w.acc_name.delete(0,100)
        w.bank.delete(0,100)
        w.branch.delete(0,100)
        w.ifsc.delete(0,100)
        
        w.name.insert(0, row[0])
        w.role.insert(0,row[1])
        w.acc_no.insert(0,row[2])
        w.acc_name.insert(0,row[3])
        w.bank.insert(0,row[4])
        w.branch.insert(0,row[5])
        w.ifsc.insert(0,row[6])

def menu(p1):
    top_level.destroy()
    import menu
    menu.vp_start_gui()

def refresh(p1):
    w.name.delete(0,100)
    w.name_2.delete(0,100)
    Name = None
    w.role.delete(0,100)
    w.acc_no.delete(0,100)
    w.acc_name.delete(0,100)
    w.bank.delete(0,100)
    w.branch.delete(0,100)
    w.ifsc.delete(0,100)

def submit(p1):
    
    cur.execute('''CREATE TABLE IF NOT EXISTS biodata
            (
            name VARCHAR(80) UNIQUE PRIMARY KEY NOT NULL,
            role VARCHAR(200),
            acc_no VARCHAR(30),
            acc_name VARCHAR(80),
            bank VARCHAR(30),
            branch VARCHAR(40),
            ifsc VARCHAR(20) )''')

    from bio import Bio
    name = w.name.get()
    name = name.lower()
    role = w.role.get()
    acc_no = w.acc_no.get()
    acc_name = w.acc_name.get()
    bank = w.bank.get()      
    branch = w.branch.get() 
    ifsc = w.ifsc.get()
    l= [name,role,acc_no,acc_name,bank,branch,ifsc]
    if Name != None:
        cur.execute("update biodata set role = %s,acc_no = %s,acc_name = %s,bank = %s,branch = %s,ifsc = %s where name = %s",[l[1],l[2],l[3],l[4],l[5],l[6], l[0]])
        messagebox.showinfo("vsa","BioData Edited successfully")
        con.commit()

    elif Name == None:
        cur.execute("insert into biodata values(%s,%s,%s,%s,%s,%s,%s)",[l[0],l[1],l[2],l[3],l[4],l[5],l[6]])
        messagebox.showinfo("vsa","BioData stored successfully")
        con.commit()


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None
    con.commit()
    con.close()

if __name__ == '__main__':

    import bio
    bio.vp_start_gui()




