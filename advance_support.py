#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Aug 07, 2020 07:19:09 PM IST  platform: Windows NT

import sys
import psycopg2
from psycopg2 import sql
from tkinter import messagebox

con = psycopg2.connect(database ="payment", user = "postgres", password = "root", host = "127.0.0.1", port = "5432" )
cur = con.cursor()

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def menu(p1):
    top_level.destroy()
    import menu
    menu.vp_start_gui()

def search(p1):
    w.namelist_view.delete(0,10000)
    Name = w.seaech_name.get()
    cur.execute("SELECT name, role FROM biodata WHERE name::text LIKE '{}%'".format(Name))
    rows = cur.fetchall()
    for row in rows:
        w.namelist_view.insert(100,'{0:<10}  |  {1:<10}' .format(row[0].title(), row[1].capitalize()))
    
def namelist(p1):
    w.namelist_view.delete(0,10000)
    cur.execute("SELECT name, role FROM biodata ORDER BY name ASC")
    rows = cur.fetchall()
    for row in rows:
        w.namelist_view.insert(100,'{0:<10}  |  {1:<10}' .format(row[0].title(), row[1].capitalize()))
    
def refresh(p1):
    w.name.delete(0,100)
    w.amount.delete(0,100)
    w.site.delete(0,100)
    w.reason.delete(0,100)
    w.date.config(text="")
 
def submit(p1):

        cur.execute("CREATE SCHEMA IF NOT EXISTS advance ")
        Name = w.name.get()
        Name = Name.lower()
        cur.execute("select name from biodata")
        checking = cur.fetchall()
        status = 0
        for name in checking:
                
            while name[0] == Name:
                        
                cur.execute(sql.SQL("CREATE TABLE IF NOT EXISTS advance.{} (name VARCHAR(80) NOT NULL, site VARCHAR(30), date DATE, amt INTEGER, reason VARCHAR(100))").format(sql.Identifier(Name)))     
                Site = w.site.get()    
                Date = date
                Amount = w.amount.get()
                Reason= w.reason.get()                        
                cur.execute(sql.SQL("INSERT INTO advance.{} (name, site, date, amt, reason) VALUES (%s, %s, %s, %s, %s)").format(sql.Identifier(Name)),[Name, Site, Date, Amount, Reason])
                status = 1
                messagebox.showinfo("vsa" ,"Data inserted")
                con.commit()
                break
                    
        if status == 0:
            messagebox.showwarning("vsa","Name not present in Biodata")
                
        else:
            pass
  
def select(p1):
    global date
    date = w.Cal.get_date()
    w.date.config(text=date)

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None
    con.commit()
    con.close()


if __name__ == '__main__':
    import advance
    advance.vp_start_gui()




